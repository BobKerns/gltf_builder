# This workflow is used for building, testing, and publishing the project.
# Ensure this workflow is configured as a required status check in branch protection rules.

name: Build, Test, and Publish

on:
    push:
    release:
        types: [published]
    workflow_dispatch:

jobs:
  build-and-publish:
    name: Build, Test, and Publish
    runs-on: ubuntu-latest
    environment: pypi
    permissions:
      id-token: write

    steps:
        - uses: actions/checkout@v4

        - name: Install uv
          uses: astral-sh/setup-uv@v5.3.1
          with:
                # Install a specific version of uv.
                version: "0.6.14"
                enable-cache: true
                cache-dependency-glob: "uv.lock"

        - name: Set up Python
          uses: actions/setup-python@v5
          with:
                python-version-file: ".python-version"
        - name: Install the project
          run: uv sync --all-extras --dev
        - name: Install Nodejs
          uses: actions/setup-node@v4
          with:
                node-version: 23
                cache: 'npm'
        - name: Install Node dependencies
          run: npm ci

        - name: Run tests
          run: uv run pytest test

        - name: Build
          run: uv build

        - name: Publish to Test PyPI
          if: github.event_name == 'release'
          env:
              UV_PYPI_TOKEN: ${{ secrets.TEST_PYPI_API_TOKEN }}
          run: uv publish --index testpypi --token $UV_PYPI_TOKEN

  publish-to-pypi:
    name: Publish to PyPI
    runs-on: ubuntu-latest
    needs: build-and-publish
    environment: pypi
    permissions:
      id-token: write

    steps:
        - uses: actions/checkout@v4

        - name: Install uv
          uses: astral-sh/setup-uv@v5.3.1
          with:
                # Install a specific version of uv.
                version: "0.6.14"
                enable-cache: true
                cache-dependency-glob: "uv.lock"

        - name: Set up Python
          uses: actions/setup-python@v5
          with:
                python-version-file: ".python-version"
        - name: Install the project
          run: uv sync --all-extras --dev

        - name: Publish to PyPI
          env:
              UV_PYPI_TOKEN: ${{ secrets.PYPI_API_TOKEN }}
          run: uv publish --token $UV_PYPI_TOKEN
