"""
This type stub file was generated by pyright.
"""

from . import *

"""
pygltflib.utils.py : A collection of functions for manipulating GLTF2 objects.


Copyright (c) 2018, 2019 Luke Miller

Permission is hereby granted, free of charge, to any person obtaining a copy
of this software and associated documentation files (the "Software"), to deal
in the Software without restriction, including without limitation the rights
to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
copies of the Software, and to permit persons to whom the Software is
furnished to do so, subject to the following conditions:

The above copyright notice and this permission notice shall be included in all
copies or substantial portions of the Software.

THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
SOFTWARE.
"""
def add_node(gltf, node):
    ...

def find_node_index_by_name(gltf: GLTF2, name): # -> int:
    ...

def add_default_camera(gltf):
    ...

def add_default_scene(gltf):
    ...

def add_camera(gltf, rotation, translation, scale):
    ...

def uri2vectors(uri): # -> None:
    ...

def indices_and_vertices_to_gltf(gltf, indices, vertices): # -> None:
    ...

def get_accessor_for_bufferview(gltf, bufferview=...): # -> None:
    ...

def get_bufferview_for_accessor(gltf, accessor): # -> None:
    ...

def unpackURI(gltf, buffer_index=...): # -> dict[Any, Any] | tuple[list[Any], list[Any]]:
    """ Unpack a data uri of a primitive with indexed geometry

    Args:
        gltf (GLTF2): a gltf object containing indexed geometry
        buffer_index: the index pointing to the buffer to unpack in gltf.buffers

    Returns:
        indices, vertices (List(Any)): List of indices that point to elements in the list of vertices (also returned)
        """
    ...

def add_indexed_geometry(gltf, indices, vertices): # -> Literal[True]:
    """
    Add a primitive object to the GLTF that is a list of indices and vertices.
    eg a triangle with indices [(0, 1, 2)] and vertices [(0.0, 0.0, 0.0), (1.0, 0.0, 0.0), (0.0, 1.0, 0.0)]
    """
    ...

def add_primitive(_gltf): # -> GLTF2:
    ...

def gltf2glb(source, destination=..., override=...): # -> Literal[True]:
    """
    Save a .gltf file as its .glb equivalent.

    Args:
        source (str): Path to existing .gltf file.
        destination (Optional(str)): Filename to write to (default is to use existing filename as base)
        override (bool): Override existing file.

    """
    ...

def glb2gltf(source, destination=..., override=...): # -> Literal[True]:
    """
    Save a .glb file as its .gltf equivalent.

    Args:
        source (str): Path to existing .glb file.
        destination (Optional(str)): Filename to write to (default is to use existing filename as base)
        override (bool): Override existing file.

    """
    ...

