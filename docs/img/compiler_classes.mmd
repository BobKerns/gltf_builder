---
id: b3a4cd18-1305-488d-ba20-9ee71f002f60
title: "Classes and functions"
config:
    layout: elk
    elk:
        mergeEdges: true
        nodePlacementStrategy: BRANDES_KOEPF
    theme: base
    themeVariables:
        darkMode: false
        darkModeBackground: "#000000"
        primaryColor: "#e0ffe0"
        primaryTextColor: "#000000"
        secondaryColor: "#e0d9ef"
        secondaryTextColor: "#0000ff"
        tertiaryColor: "#f8f9fa"
        tertiaryTextColor: "#00ff00"
        borderRadius: "0.25rem"
        fontSize: "1rem"
        fontFamily: "Arial, sans-serif"
        background: "#00ff00"
        lineColor: "#0000cc"
        nodeBorder: "#0000ff"
---
classDiagram
    note for BBuffer "The BBuffer is what ultimately holds all the binary data.\nThis note is strangely placed."
    note for Entity "This is all the items which can be added to a glTF file at top level."
    class BBuffer {
        bytes: bytes
        byteLength: int
        byteOffset: int
        name: str
    }
    classDef Final fill:#f9f,stroke:#000,stroke-width:8px;
    class ScopeName {
        <<enumeration>>
        ASSET: str
        PRIMITIVE: str
        MESH: str
        NODE: str
        BUFFER_VIEW: str
        ACCESSOR: str
        ACCESSOR_INDEX: str
        BUFFER: str
        BUILDER: str
        IMAGE: str
        MATERIAL: str
        TEXTURE: str
        CAMERA: str
        SAMPLER: str
        SKIN: str
        SCENE: str
        EXTENSION: str
        ANIMATION: str
        ANIMATION_CHANNEL: str
        ANIMATION_SAMPLER: str

    }

    class _Compilable {
        <<interface>>
        _scope: ScopeName
        -name: str
        -extensions: ExtensionsData
        -extras: ExtrasData
        -extension_objects: set[Extension]
        +name_scope: bool
        +view_scope: bool
        +state_type(): type[_STATE]
    }

    class Builder:::User {
        -index_size: Optional[IndexSize]
        -name_policy: Optional[NamePolicy]
        -extras: Optional[dict]
        -extensions: Optional[dict]
        +build(): gltf.GLTF2
    }

    class _ViewScope {
        <<interface>>
        -target_buffer: BBuffer
        +get_view(...): BBufferView
    }
    class _NameScope {
        <<interface>>
        +get_name(obj: _Compilable, ...): str
    }

    class _NodeContainerProtocol {
        <<interface>>
        +__len__(): int
        +__getitem__(name: str): BNode
        +__setitem__(name: str, node: BNode)
        +__contains__(name: str): bool
        +__iter__(): Iterable[BNode]
    }

    class _GlobalShared {
        <<interface>>
    }
    _NodeContainer <|-- Builder
    _GlobalShared <|-- Builder
    _NodeContainerProtocol <|-- _NodeContainer
    _NodeContainerProtocol <|-- _GlobalShared

    class _GlobalSharedState {
        <<interface>>
        +buffer: BBuffer
        -_get_index_size(max_value: int): IndexSize
        -_gen_name(obj: _Compilable, ...): str
        -_create_accessor(...: BAccessor
        +state(elt: Entity): _STATE
        +idx(elt: Entity): int
    }
    class Entity:::User {
        <<interface>>

        -name: str  　　　　　　　　　　　　　　　　.
    }

    class Plugin:::User {
        +name: str
        +version: str
        semver: Version
        +author: str
        summary: str
        requiresPython: Version
    }
    class Extension:::User {
        <<interface>>
        +name: str
        +compile_*(...)
    }
    Extension --> Plugin : plugin
    Plugin *--> ExtensionClass : extension_class
    Extension --|> ExtensionClass

    _Compilable <|-- Entity
    Entity <|-- BNode
    Entity <|-- BBuffer
    Entity <|-- BBufferView
    Entity <|-- BAccessor
    Entity <|-- BTexture
    Entity <|-- BImage
    Entity <|-- BSampler
    Entity <|-- BMaterial
    Entity <|-- BMesh
    Entity <|-- BCamera
    Entity <|-- BScene
    Entity <|-- BSkin
    Entity <|-- BAnimation
    Entity <|-- BAnimationChannel
    Entity <|-- BAnimationSampler
    Entity <|-- Extension


    BSkin --> "1" BNode : skeleton
    BSkin --> "*" BNode : joints
    BSkin *--> "0..1" BAccessor : inverseBindMatrices
    class BSkin:::User
    class BTexture:::User {
        <<interface>>
        " 　　　　　　　　　　　　　　　　"
    }
    class BImage:::User {
        <<interface>>
        -uri: str
        -mimeType: str
        -bufferView: BBufferView
        +name: str
    }
    BTexture --> BImage : source
    BTexture --> BSampler : sampler

    class BMaterial:::User
    BMaterial --> "0..1" BTexture : baseColorTexture
    BMaterial --> "0..1" BTexture : metallicRoughnessTexture
    BMaterial --> "0..1" BTexture : normalTexture
    BMaterial --> "0..1" BTexture : occlusionTexture
    BMaterial --> "0..1" BTexture : emissiveTexture


    _NodeContainerProtocol <|-- BNode
    class BNode:::User
    class BScene:::User
    class BCamera:::User
    class BAccessor:::User
    class BBufferView:::User
    class BAnimation:::User
    class BAnimationChannel:::User
    class BAnimationSampler:::User
    class BSampler:::User
    class BExtension:::User
    class BExtensionState_Buffer:::User
    class BMesh:::User
    class BPrimitive:::User
    BNode "1" -- "*" BNode : nodes, parent
    BScene "*" o--> "*" BNode : nodes

    BNode o--> "0..1" BCamera : camera

    BNode "1" *--> "0..1" BMesh : mesh
    BMesh "1" *--> "0..1" BPrimitive : primitives
    BMesh "1" *--> "0..1" BAccessor : weights

    class BPrimitive:::User {
        <<interface>>
        -mode: PrimitiveMode
        -indices: BAccessor
        -material: BMaterial
        -targets: list[BAccessor]
        +name: str
    }
    BPrimitive --> "0..1" BMaterial : material
    BPrimitive o--> "0..1" BAccessor : in


    BAccessor --> BBufferView : bufferview

    BBufferView --> BBuffer : buffer

    BPrimitive --> "0..1" BMaterial : material

    BImage "1" *--> "1" BBufferView : bufferView

    BAnimationChannel --> BSampler : sampler
    BAnimationChannel --> BNode : target

    BAnimation --> "*" BAnimationChannel : channels
    BAnimation --> "*" BAnimationSampler : samplers


    class _CompileState {
        <<interface>>
        -name: str
        -_index: int|None
        -_byteOffset: int|None
        -_len: int|None
        -PRIMITIVES: Progress
        -COLLECT: _Collected|Progress
        -ENUMERATE: int|Progress
        -VERTICES: Progress
        -SIZES: int|Progress
        -OFFSETS: int|Progress
        -BUFFERS: Progress
        -VIEWS: Progress
        -EXTENSIONS: set[str]|None|Progress
        -BUILD: gltf.GLTF2|gltf.Property|Progress
        +index: int
        +__len__(): int
        +__bool__(): bool
    }

    class _BinaryCompileState {
        <<interface>>
        -_len: int|None
        -_byteOffset: int|None
        +byteOffset: int
        +__len__(): int
        +__bool__(): bool
    }

    class GlobalState {
        +do_compile(phase: Phase)
        +state(entity: Entity): _CompileState
    }

    class Progress {
        <<enumeration>>
        NONE
        IN_PROGRESS
        DONE
    }

    class Phase {
        <<enumeration>>
        EXTENSIONS
        PRIMITIVES
        COLLECT
        ENUMERATE
        VERTICES
        SIZES
        OFFSETS
        BUFFERS
        VIEWS
        BUILD
    }


    _BinaryCompileState <|-- GlobalState
    _NodeContainer <|-- GlobalState
    _GlobalSharedState <|-- GlobalState
    _CompileState <|-- _BinaryCompileState
    _ViewScope <|-- _CompileState
    _NameScope <|-- _CompileState
    _GlobalShared <|-- _GlobalSharedState


    BNode ..> _NodeState : state_class
    BBuffer ..> _BufferState : state_class
    BBufferView ..> _BufferViewState : state_class
    BAccessor ..> _AccessorState : state_class
    BTexture ..> _TextureState : state_class
    BImage ..> _ImageState : state_class
    BSampler ..> _SamplerState : state_class
    BMaterial ..> _MaterialState : state_class
    BMesh ..> _MeshState : state_class
    BCamera ..> _CameraState : state_class
    BScene ..> _SceneState : state_class
    BSkin ..> _SkinState : state_class
    BAnimation ..> _AnimationState : state_class
    BAnimationChannel ..> _AnimationChannelState : state_class
    BAnimationSampler ..> _AnimationSamplerState : state_class
    Extension ..> _ExtensionState : state_class

    _NodeState --|> _CompileState
    _NodeState --|> _NodeContainer
    _BufferState --|> _BinaryCompileState
    _BufferViewState --|> _BinaryCompileState
    _AccessorState --|> _BinaryCompileState
    _TextureState --|> _CompileState
    _ImageState --|> _CompileState
    _SamplerState --|> _CompileState
    _MaterialState --|> _CompileState
    _MeshState --|> _CompileState
    _CameraState --|> _CompileState
    _SceneState --|> _CompileState
    _SkinState --|> _CompileState
    _AnimationState --|> _CompileState
    _AnimationChannelState --|> _CompileState
    _AnimationSamplerState --|> _CompileState
    _ExtensionState --|> _CompileState

    _NodeState ..> BNode : proxy-for
    _BufferState ..> BExtensionState_Buffer : proxy-for
    _BufferViewState ..> BBufferView : proxy-for
    _AccessorState ..> BAccessor : proxy-for
    _TextureState ..> BTexture : proxy-for
    _ImageState ..> BImage : proxy-for
    _SamplerState ..> BSampler : proxy-for
    _MaterialState ..> BMaterial : proxy-for
    _MeshState ..> BMesh : proxy-for
    _CameraState ..> BCamera : proxy-for
    _SceneState ..> BScene : proxy-for
    _SkinState ..> BSkin : proxy-for
    _AnimationState ..> BAnimation : proxy-for
    _AnimationChannelState ..> BAnimationChannel : proxy-for
    _AnimationSamplerState ..> BAnimationSampler : proxy-for
    _ExtensionState ..> BExtension : proxy-for

    _NodeState --> BNode : entity
    _BufferState --> BBuffer : entity
    _BufferViewState --> BBufferView : entity
    _AccessorState --> BAccessor : entity
    _TextureState --> BTexture : entity
    _ImageState --> BImage : entity
    _SamplerState --> BSampler : entity
    _MaterialState --> BMaterial : entity
    _MeshState --> BMesh : entity
    _CameraState --> BCamera : entity
    _SceneState --> BScene : entity
    _SkinState --> BSkin : entity
    _AnimationState --> BAnimation : entity
    _AnimationChannelState --> BAnimationChannel : entity
    _AnimationSamplerState --> BAnimationSampler : entity
    _ExtensionState --> Extension : entity

    GlobalState *--> BNode
    GlobalState *--> BBuffer
    GlobalState *--> BBufferView
    GlobalState *--> BAccessor
    GlobalState *--> BTexture
    GlobalState *--> BImage
    GlobalState *--> BSampler
    GlobalState *--> BMaterial
    GlobalState *--> BMesh
    GlobalState *--> BCamera
    GlobalState "1" *--> "*" BScene : "scenes"
    GlobalState *--> BSkin
    GlobalState *--> BAnimation
    GlobalState *--> BAnimationChannel
    GlobalState *--> BAnimationSampler
    GlobalState *--> Extension
    GlobalState "1" --> "0..1" BScene : scene

    _CompileState --> Entity : entity
    _CompileState --> "*" Extension: extension_objects


    classDef User fill:#ffe0ff,stroke:#0a2,stroke-width:2px;
